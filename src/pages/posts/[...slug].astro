---
import path from 'node:path'
import { getCollection } from 'astro:content'
import License from '@components/misc/License.astro'
import Markdown from '@components/misc/Markdown.astro'
import I18nKey from '@i18n/i18nKey'
import { i18n } from '@i18n/translation'
import MainGridLayout from '@layouts/MainGridLayout.astro'
import { getDir, getPostUrlBySlug } from '@utils/url-utils'
import { Icon } from 'astro-icon/components'
import { licenseConfig } from 'src/config'
import PostMetadata from '../../components/PostMeta.astro'
import ImageWrapper from '../../components/misc/ImageWrapper.astro'
import { profileConfig, siteConfig } from '../../config'
import { formatDateToYYYYMMDD } from '../../utils/date-utils'
import { getHeadings } from '../../utils/getHeadings.js'; 
import Outline from 'Outline.astro'

const { entry } = Astro.props
const { Content } = await entry.render()
const { remarkPluginFrontmatter } = await entry.render()

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: entry.data.title,
  description: entry.data.description || entry.data.title,
  keywords: entry.data.tags,
  author: {
    '@type': 'Person',
    name: profileConfig.name,
    url: Astro.site,
  },
  datePublished: formatDateToYYYYMMDD(entry.data.published),
  inLanguage: (entry.data.lang ? entry.data.lang.replace('_', '-') : siteConfig.lang.replace('_', '-')),
}

// 设置文章密码
const postPassword = "457766024"
let isAuthorized = false;

// 检查是否已经授权（从 localStorage 中读取状态）
if (typeof window !== "undefined" && localStorage.getItem("postAuthorized") === "true") {
  isAuthorized = true;
}

function checkPassword(input) {
  if (input === postPassword) {
    isAuthorized = true;
    localStorage.setItem("postAuthorized", "true"); // 保存验证状态
    window.location.reload(); // 刷新页面以更新内容显示
  } else {
    alert("密码错误");
  }
}

export async function getStaticPaths() {
  const blogEntries = await getCollection('posts', ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true
  })
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}
---

<MainGridLayout banner={entry.data.image} title={entry.data.title} description={entry.data.description} lang={entry.data.lang} setOGTypeArticle={true}>
  <script is:inline slot="head" type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>

  <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">

    <!-- 密码保护 -->
    {isAuthorized ? (
      <div id="post-container" class="card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full">
        <!-- 展示文章内容 -->
        <div class="flex flex-row text-black/30 dark:text-white/30 gap-5 mb-3 transition onload-animation">
          <div class="flex flex-row items-center">
            <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
              <Icon name="material-symbols:notes-rounded"></Icon>
            </div>
            <div class="text-sm">{remarkPluginFrontmatter.words} {" " + i18n(I18nKey.wordsCount)}</div>
          </div>
          <div class="flex flex-row items-center">
            <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
              <Icon name="material-symbols:schedule-outline-rounded"></Icon>
            </div>
            <div class="text-sm">{remarkPluginFrontmatter.minutes} {" " + i18n(I18nKey.minutesCount)}</div>
          </div>
        </div>

        <!-- Post title -->
        <div class="relative onload-animation">
          <div
            data-pagefind-body data-pagefind-weight="10" data-pagefind-meta="title"
            class="transition w-full block font-bold mb-3
            text-3xl md:text-[2.5rem]/[2.75rem]
            text-black/90 dark:text-white/90
            md:before:w-1 before:h-5 before:rounded-md before:bg-[var(--primary)]
            before:absolute before:top-[0.75rem] before:left-[-1.125rem]
          ">
            {entry.data.title}
          </div>
        </div>

        <!-- Post metadata -->
        <div class="onload-animation">
          <PostMetadata
            class="mb-5"
            published={entry.data.published}
            tags={entry.data.tags}
            category={entry.data.category}
          ></PostMetadata>
          {!entry.data.image && <div class="border-[var(--line-divider)] border-dashed border-b-[1px] mb-5"></div>}
        </div>

        <!-- Cover Image -->
        {entry.data.image &&
          <ImageWrapper id="post-cover" src={entry.data.image} basePath={path.join("content/posts/", getDir(entry.id))} class="mb-8 rounded-xl banner-container onload-animation"/>
        }

        <!-- Markdown Content -->
        <Markdown class="mb-6 markdown-content onload-animation">
          <Content />
        </Markdown>

        {licenseConfig.enable && <License title={entry.data.title} slug={entry.slug} pubDate={entry.data.published} class="mb-6 rounded-xl license-container onload-animation"></License>}
      </div>
    ) : (
      <div id="password-form" class="w-full flex flex-col items-center justify-center py-16">
        <p class="text-lg mb-4">请输入密码以查看内容：</p>
        <input type="password" id="password-input" class="input mb-4" />
        <button class="btn-primary" onClick={() => {
          const input = document.getElementById("password-input").value
          checkPassword(input)
        }}>查看内容</button>
      </div>
    )}
  </div>

  <div class="flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full">
    <a href={entry.data.nextSlug ? getPostUrlBySlug(entry.data.nextSlug) : "#"}
       class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.nextSlug}]}>
      {entry.data.nextSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center justify-start gap-4" >
        <Icon name="material-symbols:chevron-left-rounded" class="text-[2rem] text-[var(--primary)]" />
        <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
          {entry.data.nextTitle}
        </div>
      </div>}
    </a>

    <a href={entry.data.prevSlug ? getPostUrlBySlug(entry.data.prevSlug) : "#"}
       class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.prevSlug}]}>
      {entry.data.prevSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center justify-end gap-4">
        <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
          {entry.data.prevTitle}
        </div>
        <Icon name="material-symbols:chevron-right-rounded" class="text-[2rem] text-[var(--primary)]" />
      </div>}
    </a>
  </div>
</MainGridLayout>

<style is:global>
  #password-form { 
    text-align: center; 
  }
  .input {
    padding: 0.5rem;
    font-size: 1rem;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  .btn-primary {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    color: #fff;
    background-color: #007acc;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  .btn-primary:hover {
    background-color: #005f99;
  }
  .headings {
    padding: 1rem;
    border-left: 2px solid var(--primary);
  }
  .heading-1 { font-size: 1.25rem; font-weight: bold; }
  .heading-2 { font-size: 1.125rem; }
</style>